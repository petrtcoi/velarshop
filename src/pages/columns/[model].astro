---
import Layout from '@shared/layouts/Layout.astro'

import ModelTitle from '@widgets/pageModel/ModelTitle.astro'
import RadiatorList from '@widgets/pageModel/RadiatorList/RadiatorList.astro'
import ModelBasicInfo from '@widgets/pageModel/ModelBasicInfo.astro'

import RelatedModels from '@features/model/RelatedModels/RelatedModels.astro'
import ModelsImagesGallery from '@features/model/ModelsImagesGallery/ModelsImagesGallery.astro'
import ModelAdditionalInfo from '@features/model/ModelAdditionalInfo/ModelAdditionalInfo.astro'

import { modelsJsonData } from '@entities/Model'
import { getModelMetaTitle } from '@shared/utils/getModelMetaTitle'

import type { ModelJson } from '@entities/Model'
import BuyerInfo from '@widgets/buyerInfo/BuyerInfo.astro'
import { getModelMetaDescription } from '@shared/utils/getModelMetaDescription';
import Breadcrumbs from '@widgets/breadcrumbs/Breadcrumbs.astro';

export async function getStaticPaths() {
	return modelsJsonData
		.filter(model => model.type === 'columns')
		.map(model => ({
			params: { model: model.slug },
			props: { model: model },
		}))
}

export type Props = {
	model: ModelJson
}
const { model } = Astro.props as Props

const modelTitle = getModelMetaTitle(model)
const metaDescription = getModelMetaDescription(model)

const crumbs = [
	{title: 'Главная', url: '/'},
	{title: 'Трубчатые радиаторы отопления', url: '/columns'},
	{title: `Трубчатый радиатор Velar ${model.name}`, url: `/columns/${model.slug}`},
]

---

<Layout title={modelTitle} description={metaDescription}>
	<span
		itemscope
		itemtype='https://schema.org/ProductModel'
	>
	<Breadcrumbs items={crumbs} />
		<ModelTitle {...model} />
		<ModelBasicInfo model={model} />
		<RadiatorList model={model} />
		<ModelsImagesGallery
			title={`Дополнительные изображения Velar ${model.name}`}
			ignoreMain={true}
			model={model}
		/>
		<ModelAdditionalInfo model={model} />
		<RelatedModels model={model} />

		<BuyerInfo productTitle='радиаторы и конвекторы Velar' />
	</span>
</Layout>
